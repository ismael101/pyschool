"""create db tables

Revision ID: c8a8dc9adfb1
Revises: 
Create Date: 2021-07-28 21:47:47.662163

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
import bcrypt
import os

# revision identifiers, used by Alembic.
revision = 'c8a8dc9adfb1'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    registery = op.create_table('registery',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first', sa.String(length=255), nullable=False),
    sa.Column('last', sa.String(length=255), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('role', postgresql.ENUM('ADMIN', 'TEACHER', 'STUDENT', name='role', create_type=False), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('course',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('subject', postgresql.ENUM('MATH', 'LANGUAGE', 'SCIENCE', 'TECHNOLOGY', 'ENGINEERING', 'HUMANITIES', name='subject', create_type=False), nullable=False),
    sa.Column('credit', sa.Integer(), nullable=False),
    sa.Column('teacher', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['teacher'], ['registery.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('title')
    )
    users = op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=255), nullable=False),
    sa.Column('password', sa.String(length=255), nullable=False),
    sa.Column('register', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['register'], ['registery.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('register'),
    sa.UniqueConstraint('username')
    )
    op.create_table('classlist',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('course', sa.Integer(), nullable=True),
    sa.Column('student', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['course'], ['course.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['student'], ['registery.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('modules',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('module', postgresql.ENUM('HOMEWORK', 'QUIZ', 'PROJECT', 'TEST', name='module', create_type=False), nullable=False),
    sa.Column('course', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['course'], ['course.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('grades',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('grade', sa.String(length=255), nullable=False),
    sa.Column('module', sa.Integer(), nullable=False),
    sa.Column('student', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['module'], ['modules.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['student'], ['registery.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###
    op.bulk_insert(registery,[{'id':1, 'first':os.environ['FIRST'], 'last':os.environ['LAST'], 'email':os.environ['EMAIL'], 'role':'ADMIN'}])
    op.bulk_insert(users, [{'id':1, 'username':os.environ['USERN'], 'password':bcrypt.hashpw(str(os.environ['PASSW']).encode('utf8'), bcrypt.gensalt()).decode('utf8'), 'register':1}])

def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('grades')
    op.drop_table('modules')
    op.drop_table('classlist')
    op.drop_table('users')
    op.drop_table('course')
    op.drop_table('registery')
    # ### end Alembic commands ###
